// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum RolesEnum {
  ADMIN
  USER
}

enum AuthProviderEnum {
  CREDENTIAL
  GOOGLE
  FACEBOOK

  @@map("AuthProviderEnum")
}

model User {
  id             Int              @id @default(autoincrement())
  email          String           @unique
  password       String
  email_verified DateTime?
  role           RolesEnum
  fullname       String?
  image          String?
  image_path     String?
  no_phone       String?
  gender         String?
  birth_date     DateTime?
  birth_place    String?
  is_active      Boolean?         @default(true)
  provider       AuthProviderEnum

  createdBy String?
  updatedBy String?
  deletedBy String?
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?
}

model VerificationToken {
  userId   Int       @unique
  token    String    @unique
  otp      String
  createAt DateTime? @default(now())
  usingAt  DateTime?
}

model PasswordResetToken {
  id       Int       @id @default(autoincrement())
  userId   Int
  token    String    @unique
  createAt DateTime? @default(now())
  usingAt  DateTime?
}

model ProductCategory {
  id        Int               @id @default(autoincrement())
  slug      String            @unique
  name      String
  desc      String?
  is_active Boolean?          @default(true)
  products  Product[]

  createdBy String?
  updatedBy String?
  deletedBy String?
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?
}

model Product {
  id          Int              @id @default(autoincrement())
  slug        String           @unique
  name        String
  desc        String?
  short_desc  String?
  category_id Int?
  brand       String?
  uom         String?
  img         String?
  is_active   Boolean?         @default(true)
  category    ProductCategory? @relation(fields: [category_id], references: [id])
  variants    ProductVariant[]

  createdBy String?
  updatedBy String?
  deletedBy String?
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?
}

model ProductVariant {
  id         Int      @id @default(autoincrement())
  product_id Int
  sku        String   @unique
  barcode    String?  @unique
  name       String
  price      Decimal
  disc_price Decimal?
  stock_qty  Int
  img        String?
  is_active  Boolean? @default(true)
  product    Product  @relation(fields: [product_id], references: [id])

  createdBy String?
  updatedBy String?
  deletedBy String?
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?
}
